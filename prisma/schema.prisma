datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password   Password?
  settings   UserSettings?
  chats      Chat[]
  assistants Assistant[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model UserSettings {
  id String @id @default(cuid())

  openAiKey String? @unique

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Assistant {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name   String
  prompt String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  chats           Chat[]
  contextMessages AssistantContextMessage[]

  @@unique([userId, name])
}

model AssistantContextMessage {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role    String
  content String

  assistant   Assistant @relation(fields: [assistantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  assistantId String
}

model Chat {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  assistant   Assistant @relation(fields: [assistantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  assistantId String

  messages Message[]
}

model Message {
  id String @id @default(cuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role    String
  content String

  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  chatId String
}
